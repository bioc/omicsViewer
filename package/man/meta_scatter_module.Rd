% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_meta_scatter.R
\name{meta_scatter_module}
\alias{meta_scatter_module}
\title{Utility - scatter plot for meta shiny module}
\usage{
meta_scatter_module(input, output, session,
  reactive_meta = reactive(NULL), reactive_expr = reactive(NULL),
  combine = c("pheno", "feature"), source = "plotlyscattersource",
  reactive_x = reactive(NULL), reactive_y = reactive(NULL))
}
\arguments{
\item{input}{input}

\item{output}{output}

\item{session}{session}

\item{reactive_meta}{reactive meta data, phenotype data or feature data}

\item{reactive_expr}{reactive expression data}

\item{combine}{how to combine the expression and meta data, pheno or feature?}

\item{source}{source id for plotly object}

\item{reactive_x}{reactive value for pre-selected x-aixs}

\item{reactive_y}{reactive value for pre-selected y-aixs
#' # library(shiny)
# library(Biobase)
# dat <- readRDS("Dat/exampleEset.RDS")
# source("Git/R/module_triselector.R")
# source("Git/R/module_barplot.R")
# source("Git/R/module_scatter.R")
# source("Git/R/module_boxplot.R")
# 
# 
# ui <- fluidPage(
#   meta_scatter_ui("test_meta_scatter")
# )
# 
# server <- function(input, output, session) {
#   callModule(meta_scatter_module, id = "test_meta_scatter",
#              reactive_meta = reactive(pData(dat)),
#              combine = c("pheno", "feature")[1],
#              # reactive_meta=reactive(fData(dat)),
#              # combine = c("pheno", "feature")[2],
#              reactive_expr = reactive(exprs(dat))
#   )
# }
# 
# shinyApp(ui, server)}
}
\description{
Utility - scatter plot for meta shiny module
}
