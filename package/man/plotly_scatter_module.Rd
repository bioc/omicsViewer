% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module_scatter.R
\name{plotly_scatter_module}
\alias{plotly_scatter_module}
\title{Utility plotly scatter module}
\usage{
plotly_scatter_module(
  input,
  output,
  session,
  reactive_param_plotly_scatter,
  reactive_regLine = reactive(FALSE),
  reactive_checkpoint = reactive(TRUE)
)
}
\arguments{
\item{input}{input}

\item{output}{output}

\item{session}{sesion}

\item{reactive_param_plotly_scatter}{reactive parammeters for plotly_scatter}

\item{reactive_regLine}{logical show or hide the regression line}

\item{reactive_checkpoint}{checkpoint}
}
\description{
Utility plotly scatter module
}
\examples{
#' # library(shiny)

################ example scatter ##################
# x <- rnorm(30)
# y <- x + rnorm(30, sd = 0.5)

# # ################ example beeswarm horizontal ##################
# x <- rnorm(30)
# y <- sample(c("x", "y", "z"), size = 30, replace = TRUE)

# ################ example beeswarm vertical ##################
# x <- sample(c("x", "y", "z"), size = 30, replace = TRUE)
# y <- rnorm(30)
#
# cc <- sample(letters[1:4], replace = TRUE, size = 30)
# shape <- sample(c("S1", "S2", "S3"), replace = TRUE, size = 30)
# sz <- sample(c(10, 20, 30, replace = TRUE, size = 30))
#

############ UI and Server ############
# ui <- fluidPage(
#   plotly_scatter_ui("test_scatter")
# )
# 
# server <- function(input, output, session) {
#   v <- callModule(plotly_scatter_module, id = "test_scatter",
#                   # reactive_checkpoint = reactive(FALSE),
#                   reactive_param_plotly_scatter = reactive(list(
#                     x = x, y = y,
#                     color = cc,
#                     shape = shape,
#                     size = sz,
#                     tooltips = paste("A", 1:30)
#                   )))
#   observe(print(v()))
# }
# 
# shinyApp(ui, server)
# 
# # ################### check returned value ########################
# x <- c(5, 6, 3, 4, 1, 2)
# y <- c(5, 6, 3, 4, 1, 2)
# # y <- c("a", "a", "b", "b", "c", "c")
# 
# ui <- fluidPage(
#   plotly_scatter_ui("test_scatter")
# )
# server <- function(input, output, session) {
#   v <- callModule(plotly_scatter_module, id = "test_scatter",
#                   reactive_param_plotly_scatter = reactive(list(
#                     x = x, y = y, tooltips = paste("A", 1:6), highlight = 2:4
#                   )))
# 
#   observe(print(v()))
# }
# shinyApp(ui, server)

}
